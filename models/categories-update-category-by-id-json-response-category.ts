/*
Discourse API Documentation

This page contains the documentation on how to use Discourse through API calls.

> Note: For any endpoints not listed you can follow the
[reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576)
guide to figure out how to use an API endpoint.

### Request Content-Type

The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`,
`multipart/form-data`, or `application/json`.

### Endpoint Names and Response Content-Type

Most API endpoints provide the same content as their HTML counterparts. For example
the URL `/categories` serves a list of categories, the `/categories.json` API provides the
same information in JSON format.

Instead of sending API requests to `/categories.json` you may also send them to `/categories`
and add an `Accept: application/json` header to the request to get the JSON response.
Sending requests with the `Accept` header is necessary if you want to use URLs
for related endpoints returned by the API, such as pagination URLs.
These URLs are returned without the `.json` prefix so you need to add the header in
order to get the correct response format.

### Authentication

Some endpoints do not require any authentication, pretty much anything else will
require you to be authenticated.

To become authenticated you will need to create an API Key from the admin panel.

Once you have your API Key you can pass it in along with your API Username
as an HTTP header like this:

```
curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\
-H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\
-H \"Api-Username: system\"
```

and this is how POST requests will look:

```
curl -X POST \"http://127.0.0.1:3000/categories\" \\
-H \"Content-Type: multipart/form-data;\" \\
-H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\
-H \"Api-Username: system\" \\
-F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\
-F \"color=49d9e9\" \\
-F \"text_color=f0fcfd\"
```

### Boolean values

If an endpoint accepts a boolean be sure to specify it as a lowercase
`true` or `false` value unless noted otherwise.


The version of the OpenAPI document: latest


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner } from './categories-create-category-request-response-category-group-permissions-inner';
import { CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner } from './categories-create-category-request-response-category-required-tag-groups-inner';

/**
 * 
 * @export
 * @interface CategoriesUpdateCategoryByIdJsonResponseCategory
 */
export interface CategoriesUpdateCategoryByIdJsonResponseCategory {
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'description': any;
    /**
     * 
     * @type {number}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'color': string;
    /**
     * 
     * @type {string}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'text_color': string;
    /**
     * 
     * @type {string}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'slug': string;
    /**
     * 
     * @type {number}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'topic_count': number;
    /**
     * 
     * @type {number}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'post_count': number;
    /**
     * 
     * @type {number}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'position': number;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'description_text': any;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'description_excerpt': any;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'topic_url': any;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'read_restricted': boolean;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'permission': any;
    /**
     * 
     * @type {number}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'notification_level': number;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'can_edit': boolean;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'topic_template': any;
    /**
     * 
     * @type {Array<any>}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'form_template_ids': Array<any>;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'has_children': any;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'sort_order': any;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'sort_ascending': any;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'show_subcategory_list': boolean;
    /**
     * 
     * @type {number}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'num_featured_topics': number;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'default_view': any;
    /**
     * 
     * @type {string}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'subcategory_list_style': string;
    /**
     * 
     * @type {string}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'default_top_period': string;
    /**
     * 
     * @type {string}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'default_list_filter': string;
    /**
     * 
     * @type {number}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'minimum_required_tags': number;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'navigate_to_first_post_after_read': boolean;
    /**
     * 
     * @type {object}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'custom_fields': object;
    /**
     * 
     * @type {Array<any>}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'allowed_tags'?: Array<any>;
    /**
     * 
     * @type {Array<any>}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'allowed_tag_groups'?: Array<any>;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'allow_global_tags'?: boolean;
    /**
     * 
     * @type {Array<CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner>}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'required_tag_groups': Array<CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner>;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'category_setting'?: any;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'read_only_banner': any;
    /**
     * 
     * @type {Array<any>}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'available_groups': Array<any>;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'auto_close_hours': any;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'auto_close_based_on_last_post': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'allow_unlimited_owner_edits_on_first_post': boolean;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'default_slow_mode_seconds': any;
    /**
     * 
     * @type {Array<CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner>}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'group_permissions': Array<CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner>;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'email_in': any;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'email_in_allow_strangers': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'mailinglist_mirror': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'all_topics_wiki': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'can_delete': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'allow_badges': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'topic_featured_link_allowed': boolean;
    /**
     * 
     * @type {number}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'search_priority': number;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'uploaded_logo': any;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'uploaded_logo_dark': any;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'uploaded_background': any;
    /**
     * 
     * @type {any}
     * @memberof CategoriesUpdateCategoryByIdJsonResponseCategory
     */
    'uploaded_background_dark': any;
}

